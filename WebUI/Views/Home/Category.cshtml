@model CategoryViewModel
@{
    ViewData["Title"] = "Категории";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
    <form asp-controller="Category" asp-action="Add" method="post">
        <div>
            <label asp-for="Category">Категория для добавления</label>
            <input asp-for="Category" class="form-control" required />
        </div>

        <button type="submit">Добавить</button>
    </form>

    @if (ViewBag.ErrorCategory != null)
    {
        <div style="color:red">@ViewBag.ErrorCategory</div>
    }

    <table>
        <tr>
            <th width="15">Категория</th>
        </tr>

        @foreach (var category in Model.categoryModels!)
        {
            <tr>
                <td class="category-name">@category.Name</td>
                <td class="action-buttons">
                    <button type="button" value="@category.Id" onclick="editRow(this)">Изменить</button>
                    <form asp-controller="Category" asp-action="Delete" asp-route-id="@category.Id" method="post">
                        <button type="submit">Удалить</button>
                    </form>
                </td>
            </tr>
        }
    </table>
</body>
</html>
<script>
function editRow(button) {
    const row = button.closest('tr');
    const cell = row.querySelector('td.category-name');
    const currentValue = cell.textContent.trim();

    const inputElement = document.createElement('input');
    inputElement.type = 'text';
    inputElement.value = currentValue;
    inputElement.defaultValue = currentValue;

    cell.innerHTML = '';
    cell.appendChild(inputElement);

    button.textContent = "Сохранить";
    button.onclick = () => saveRow(button);
}

function saveRow(button) {
    const row = button.closest('tr');
    const id = button.value;
    const cell = row.querySelector('td.category-name');
    const input = cell.querySelector('input');
    const newCategoryName = input.value.trim();

    fetch('/api/CategoryApi/update', {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            Id: id,
            Name: newCategoryName
        })
    })
    .then(async response => {
        if (!response.ok) {
            // Считываем текст ошибки от сервера
            const text = await response.text();
            throw new Error(text || "Ошибка обновления категории.");
        }
        return response.json().catch(() => ({})); // Если пустой ответ
    })
    .then(() => {
        cell.textContent = newCategoryName;
        button.textContent = "Изменить";
        button.onclick = () => editRow(button);
    })
    .catch(error => {
        alert(error.message);
        cell.textContent = input.defaultValue;
        button.textContent = "Изменить";
        button.onclick = () => editRow(button);
    });
}
</script>

